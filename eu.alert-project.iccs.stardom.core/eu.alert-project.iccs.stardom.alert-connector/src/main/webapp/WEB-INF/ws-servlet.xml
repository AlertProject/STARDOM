<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd"
        default-autowire="byName"
        >

    <context:annotation-config />
    <tx:annotation-driven/>


    <!-- Since we are spliting our jars then we need to define each
        separately -->
    <context:component-scan base-package="eu.alertproject.iccs.stardom" />


    <!-- JSR303 -->
    <mvc:annotation-driven />

    <bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="favorPathExtension" value="true"/>
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json" />
            </map>
        </property>
        <property name="defaultViews">
            <list>
              <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" >
                <property name="prefixJson" value="false" />
              </bean>
            </list>
          </property>
          <property name="ignoreAcceptHeader" value="true" />

    </bean>
    <!-- Keeping this here for reference -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false" />
                <property name="generateDdl" value="false" />
                <property name="databasePlatform"
                          value="org.hibernate.dialect.MySQLDialect" />
            </bean>
        </property>
    </bean>

    <bean id="eventservice" class="eu.alertproject.iccs.stardom.bus.api.StardomEventService"/>

    <bean id="eventbusInit" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
      <property name="targetClass" value="org.bushe.swing.event.EventServiceLocator" />
      <property name="targetMethod" value="setEventService" />
      <property name="arguments">
          <list>
              <!-- Be careful here, do not change the name of the service -->
              <value>EventBus</value>
              <ref bean="eventservice"/>
          </list>
      </property>
    </bean>


    <!--  Properties -->
    <bean id="alertPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
            <property name="location" value="classpath:system.properties"/>
    </bean>




    <bean class="eu.alertproject.iccs.stardom.bus.api.annotation.EventHandlersBeanPostProcessor"/>
    <bean class="eu.alertproject.iccs.stardom.constructor.api.spring.AnalyzerBeanPostProcessor"/>


    <!--  The documentation specified that this will inject the the persistence unit into the class -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="dataSource" ref="dataSource" />
    </bean>



    <!-- Services -->
   <bean class="eu.alertproject.iccs.stardom.analyzers.scm.bus.ScmEventHandler"/>
   <bean class="eu.alertproject.iccs.stardom.analyzers.its.bus.ItsEventHandler"/>
   <!--<bean class="eu.alertproject.iccs.stardom.analyzers.forums.bus.ForumEventHandler>-->
   <bean class="eu.alertproject.iccs.stardom.analyzers.mailing.bus.MailingListEventHandler"/>
   <bean class="eu.alertproject.iccs.stardom.analyzers.its.constructor.ItsActivityAnalyzer"/>
   <bean class="eu.alertproject.iccs.stardom.analyzers.its.constructor.ItsTemporalAnalyzer"/>


    <!-- Analyzers -->

    <bean class="eu.alertproject.iccs.stardom.analyzers.scm.constructor.ScmActivityAnalyzer"/>
    <bean class="eu.alertproject.iccs.stardom.analyzers.scm.constructor.ScmTemporalAnalyzer"/>



    <!--<bean class="eu.alertproject.iccs.stardom.analyzers.forums.constructor.ForumActivityAnalyzer"/>-->
    <bean class="eu.alertproject.iccs.stardom.analyzers.mailing.constructor.MailingListActivityAnalyzer"/>
    <bean class="eu.alertproject.iccs.stardom.analyzers.mailing.constructor.MailingListTemporalAnalyzer"/>

</beans>